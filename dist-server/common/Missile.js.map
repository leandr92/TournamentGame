{"version":3,"sources":["../../src/common/Missile.js"],"names":["Missile","gameEngine","options","props","position","max","Renderer","renderer","getInstance","sprite","PIXI","Sprite","loader","resources","missile","texture","sprites","id","width","height","anchor","set","x","y","layer2","addChild","destroy","other","inputId","Object","assign","type","BaseTypes","TYPES","INT32","DynamicObject"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,O;;;;;AAEjB,mBAAYC,UAAZ,EAAwBC,OAAxB,EAAiCC,KAAjC,EAAuC;AAAA;;AAAA,6BAC7BF,UAD6B,EACjBC,OADiB,EACRC,KADQ;AAEtC,G,CAED;AACA;AACA;;;;;SAQA;AACA,mBAAc;AACV,aAAO;AAAEC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP;AAAZ,OAAP;AACH;;;WAED,sBAAaJ,UAAb,EAAyB;AACrB,UAAIK,iBAAJ,EAAc;AACV,YAAIC,QAAQ,GAAGD,kBAASE,WAAT,EAAf;;AACA,YAAIC,MAAM,GAAG,IAAIC,IAAI,CAACC,MAAT,CAAgBD,IAAI,CAACE,MAAL,CAAYC,SAAZ,CAAsBC,OAAtB,CAA8BC,OAA9C,CAAb;AACAR,QAAAA,QAAQ,CAACS,OAAT,CAAiB,KAAKC,EAAtB,IAA4BR,MAA5B;AACAA,QAAAA,MAAM,CAACS,KAAP,GAAe,KAAK,GAApB;AACAT,QAAAA,MAAM,CAACU,MAAP,GAAgB,KAAK,GAArB;AACAV,QAAAA,MAAM,CAACW,MAAP,CAAcC,GAAd,CAAkB,GAAlB,EAAuB,GAAvB;AACAZ,QAAAA,MAAM,CAACL,QAAP,CAAgBiB,GAAhB,CAAoB,KAAKjB,QAAL,CAAckB,CAAlC,EAAqC,KAAKlB,QAAL,CAAcmB,CAAnD;AACAhB,QAAAA,QAAQ,CAACiB,MAAT,CAAgBC,QAAhB,CAAyBhB,MAAzB;AACH;AACJ;;;WAED,2BAAkBR,UAAlB,EAA8B;AAC1B,UAAIK,iBAAJ,EAAc;AACV,YAAIC,QAAQ,GAAGD,kBAASE,WAAT,EAAf;;AACA,YAAID,QAAQ,CAACS,OAAT,CAAiB,KAAKC,EAAtB,CAAJ,EAA+B;AAC3BV,UAAAA,QAAQ,CAACS,OAAT,CAAiB,KAAKC,EAAtB,EAA0BS,OAA1B;AACA,iBAAOnB,QAAQ,CAACS,OAAT,CAAiB,KAAKC,EAAtB,CAAP;AACH;AACJ;AACJ;;;WAED,gBAAOU,KAAP,EAAc;AACV,0EAAaA,KAAb;;AACA,WAAKC,OAAL,GAAeD,KAAK,CAACC,OAArB;AACH;;;SArCD,eAAuB;AACnB,aAAOC,MAAM,CAACC,MAAP,CAAc;AACjBF,QAAAA,OAAO,EAAE;AAAEG,UAAAA,IAAI,EAAEC,mBAAUC,KAAV,CAAgBC;AAAxB;AADQ,OAAd,oDAAP;AAGH;;;;EAdgCC,sB","sourcesContent":["import { BaseTypes, DynamicObject, Renderer } from 'lance-gg';\r\n\r\nexport default class Missile extends DynamicObject {\r\n\r\n    constructor(gameEngine, options, props){\r\n        super(gameEngine, options, props);\r\n    }\r\n\r\n    // this is what allows usage of shadow object with input-created objects (missiles)\r\n    // see https://medium.com/javascript-multiplayer-gamedev/chronicles-of-the-development-of-a-multiplayer-game-part-2-loops-and-leaks-10b453e843e0\r\n    // in the future this will probably be embodied in a component\r\n\r\n    static get netScheme() {\r\n        return Object.assign({\r\n            inputId: { type: BaseTypes.TYPES.INT32 }\r\n        }, super.netScheme);\r\n    }\r\n\r\n    // position correction if less than world width/height\r\n    get bending() {\r\n        return { position: { max: 500.0 } };\r\n    }\r\n\r\n    onAddToWorld(gameEngine) {\r\n        if (Renderer) {\r\n            let renderer = Renderer.getInstance();\r\n            let sprite = new PIXI.Sprite(PIXI.loader.resources.missile.texture);\r\n            renderer.sprites[this.id] = sprite;\r\n            sprite.width = 81 * 0.5;\r\n            sprite.height = 46 * 0.5;\r\n            sprite.anchor.set(0.5, 0.5);\r\n            sprite.position.set(this.position.x, this.position.y);\r\n            renderer.layer2.addChild(sprite);\r\n        }\r\n    }\r\n\r\n    onRemoveFromWorld(gameEngine) {\r\n        if (Renderer) {\r\n            let renderer = Renderer.getInstance();\r\n            if (renderer.sprites[this.id]) {\r\n                renderer.sprites[this.id].destroy();\r\n                delete renderer.sprites[this.id];\r\n            }\r\n        }\r\n    }\r\n\r\n    syncTo(other) {\r\n        super.syncTo(other);\r\n        this.inputId = other.inputId;\r\n    }\r\n}\r\n"],"file":"Missile.js"}